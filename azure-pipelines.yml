# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: SharedTools
- name: application_name
  value: sp-api-institution

stages:
- stage:
  displayName: Create Build
  jobs:
  - job: Build_Release
    variables:
      prpatch: $[counter(variables['system.pullrequest.pullrequestid'], 0)]
      brpatch: $[counter(variables['build.sourcebranchname'], 0)]
      patch: $[counter(variables['minor'], 0)] # version when you make backwards compatible bug fixes.
    steps:

      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'docker run --rm octopusdeploy/octo version'
        name: VerifyOctopusVersion
        
      # Run sonar scan, gather code coverage and execute contract and functional tests
      - task: Bash@3
        inputs:
          filePath: 'coverage_test.sh'
          arguments: $(HostUrl) $(application_name) $(application_name) 20
        name: RunCodeCoverage
    
      # Create semversion
      - template: azure-pipelines-semver.yaml 

      # Verify variables.releaseVersionNumber is updated
      - script: |
          echo $(releaseVersionNumber)
        
      # Run sonar scan, gather code coverage and execute contract and functional tests
      - task: Bash@3
        inputs:
          filePath: 'build_test.sh'
          arguments: $(releaseVersionNumber) ${{variables.application_name}}
        name: CreateRelease
